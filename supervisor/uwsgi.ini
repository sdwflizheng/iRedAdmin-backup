# uwsig使用配置文件启动
[uwsgi]
# 项目目录
chdir=/home/data/www/iRedAdmin
#
pythonpath=/usr/local/python3/bin
# 指定项目的application
module=iRedAdmin.wsgi:application
# 指定sock的文件路径       
#socket=/home/data/www/gamepay/logs/uwsgi.sock
socket = 127.0.0.1:9000
#超时
socket-timeout=10
# 进程个数  workers processes二选一     
workers=8
#processes=8
threads = 4           #每个进程开启4个线程
max-requests=5000
pidfile=/home/data/www/iRedAdmin/logs/uwsgi.pid
# 指定IP端口 用于单独测试      
#http=0.0.0.0:8080
# 指定静态文件
#static-map=/static=/home/data/www/iRedAdmin/static
# 启动uwsgi的用户名和用户组
uid=root
gid=root
# 启用主进程
master=true
# 自动移除unix Socket和pid文件当服务停止的时候
vacuum=true
# 序列化接受的内容，如果可能的话
thunder-lock=true
# 启用线程
enable-threads=true
# 设置自中断时间 超过30s不工作
#harakiri=30
# 设置缓冲 所有大于8K的HTTP请求体都缓存到磁盘中
post-buffering=8192
# 设置日志目录
daemonize=/home/data/www/iRedAdmin/logs/uwsgi.log

#启动 /usr/local/python3/bin/uwsgi --ini uwsgi.ini 
#停止 /usr/local/python3/bin/uwsgi --stop /home/data/www/iRedAdmin/logs/uwsgi.pid

#nginx配置

#upstream gamepay{server 127.0.0.1:9000;}
#        location ^~ /gamepay/ {
#                uwsgi_pass gamepay;
#                include uwsgi_params;
#        }
#        location ^~ /gamepayadmin/ {
#                uwsgi_pass gamepay;
#                include uwsgi_params;
#        } 
#        location /gamepay/uploads {
#           alias /home/data/www/gamepay/uploads;
#        }
#        location /gamepay/static {
#            alias /home/data/www/gamepay/static;
#        }